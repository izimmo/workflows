jobs:
  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
  server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.17"
      - name: Build go
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
        run: |
          go test -coverpkg=./... -coverprofile="coverage.out"
          go build -ldflags="-s -w" -a -tags netgo -o app .
        working-directory: ./server
      - name: Save build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: server/app
          retention-days: 1
  front:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: "^17"
      - name: Build node
        run: |
          npm install
          npm test
          npm run build
        working-directory: ./front
      - name: Save build as artifact
        uses: actions/upload-artifact@v2
        with:
          name: front
          path: front/build/
          retention-days: 1
  image:
    runs-on: ubuntu-latest
    needs:
      - server
      - front
    steps:
      - uses: actions/checkout@v3

      - name: Download server artifact
        uses: actions/download-artifact@v2
        with:
          name: server
          path: server/

      - name: Download front artifact
        uses: actions/download-artifact@v2
        with:
          name: front
          path: front/build/

      - name: Give binary perm
        run: chmod +x app
        working-directory: ./server

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        if: github.actor!= 'dependabot[bot]' # ignore the pull request which comes from user depbot.